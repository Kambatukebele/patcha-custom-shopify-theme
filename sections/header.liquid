{% comment %}
  <link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
  <link
    rel="stylesheet"
    href="{{ 'component-cart-notification.css' | asset_url }}"
    media="print"
    onload="this.media='all'"
  >
{% endcomment %}

{% comment %}
  {%- if settings.predictive_search_enabled -%}
    <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}
{% endcomment %}

{% comment %}
  {%- if section.settings.menu_type_desktop == 'mega' -%}
    <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}
{% endcomment %}

{% comment %}
  <style>
    header-drawer {
      justify-self: start;
      margin-left: -1.2rem;
    }

    {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
      .scrolled-past-header .header__heading-logo-wrapper {
        width: 75%;
      }
    {%- endif -%}

    {%- if section.settings.menu_type_desktop != "drawer" -%}
      @media screen and (min-width: 990px) {
        header-drawer {
          display: none;
        }
      }
    {%- endif -%}

    .menu-drawer-container {
      display: flex;
    }

    .list-menu {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .list-menu--inline {
      display: inline-flex;
      flex-wrap: wrap;
    }

    summary.list-menu__item {
      padding-right: 2.7rem;
    }

    .list-menu__item {
      display: flex;
      align-items: center;
      line-height: calc(1 + 0.3 / var(--font-body-scale));
    }

    .list-menu__item--link {
      text-decoration: none;
      padding-bottom: 1rem;
      padding-top: 1rem;
      line-height: calc(1 + 0.8 / var(--font-body-scale));
    }

    @media screen and (min-width: 750px) {
      .list-menu__item--link {
        padding-bottom: 0.5rem;
        padding-top: 0.5rem;
      }
    }
  </style>
{% endcomment %}

{% comment %}
  {%- style -%}
    .header {
      padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
    }

    .section-header {
      position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
      margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-header {
        margin-bottom: {{ section.settings.margin_bottom }}px;
      }
    }

    @media screen and (min-width: 990px) {
      .header {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}
{% endcomment %}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{% comment %}
  {%- liquid
    for block in section.blocks
      if block.type == '@app'
        assign has_app_block = true
      endif
    endfor
  -%}
{% endcomment %}

{% comment %}
  {% liquid
    assign header_tag = 'div'

    if section.settings.sticky_header_type != 'none'
      assign header_tag = 'sticky-header'
    endif
  %}
{% endcomment %}

{% comment %}
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
{% endcomment %}
<header class="bg-white relative">
  <div class="container h-[72px] flex justify-between items-center">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when '@app' -%}
          {% render block %}
      {%- endcase -%}
    {%- endfor -%}
    <div class="order-1 lg:order-none">
      <span
        id="logo-name"
        class="uppercase text-3xl lg:text-4xl font-bold text-black"
      >
        {{- shop.name -}}
      </span>
    </div>
    <div class="flex justify-center items-center lg:hidden">
      <span class="i-hamburger block">{{ 'icon-hamburger.svg' | inline_asset_content }}</span>
      <span class="i-close hidden">{{ 'icon-close.svg' | inline_asset_content }}</span>
    </div>
    <ul
      id="navigationLinks"
      class="absolute -translate-x-[2000px] top-[72px] duration-700 ease-in-out overflow-hidden z-20 left-0 h-screen w-full bg-gray-50 flex flex-col justify-start items-start py-5 gap-6 px-4 sm:px-8 lg:static lg:translate-x-0 lg:top-0 lg:overflow-visible lg:z-0 lg:h-5 lg:flex-row lg:justify-between lg:items-center lg:w-[411px] lg:py-0 lg:px-0 lg:bg-transparent lg:gap-0"
    >
      {% for menu in section.settings.menu.links %}
        <li class="text-base text-black font-medium uppercase">
          <a href="{{ menu.url }}" class="">{{ menu.title }}</a>
        </li>
      {% endfor %}
    </ul>
    <div class="order-2 lg:order-none">
      <a class="hidden w-32 h-10 rounded-lg bg-black text-white py-2 px-4">Contact us</a>
      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {% if cart == empty %}
          <span class="svg-wrapper">{{ 'icon-cart-empty.svg' | inline_asset_content }}</span>
        {% else %}
          <span class="svg-wrapper">{{ 'icon-cart.svg' | inline_asset_content }}</span>
        {% endif %}
        <span class="sr-only">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="sr-only">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </div>
</header>

{% style %}
  #logo-name {
    font-family: {{ settings.type_header_font.family }};
    font-weight: {{ settings.type_header_font.weight }};
  }
  #navigationLinks{
    font-family: {{ settings.type_body_font.family }};
    font-weight: {{ settings.type_body_font.weight }};
  }
{% endstyle %}
<script>
  const HAMBURGER_ICON = document.querySelector('.i-hamburger');
  const CLOSE_ICON = document.querySelector('.i-close');
  const NAVIGATION_LINGS = document.querySelector('#navigationLinks');
  HAMBURGER_ICON.addEventListener('click', () => {
    HAMBURGER_ICON.classList.remove('block');
    HAMBURGER_ICON.classList.add('hidden');
    CLOSE_ICON.classList.remove('hidden');
    CLOSE_ICON.classList.add('block');
    NAVIGATION_LINGS.classList.remove('-translate-x-[2000px]');
  });
  CLOSE_ICON.addEventListener('click', () => {
    HAMBURGER_ICON.classList.add('block');
    HAMBURGER_ICON.classList.remove('hidden');
    CLOSE_ICON.classList.add('hidden');
    CLOSE_ICON.classList.remove('block');
    NAVIGATION_LINGS.classList.add('-translate-x-[2000px]');
  });
</script>
{% comment %} {{ settings.type_header_font.family }} {% endcomment %}

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      }

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach((disclosure) => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__utilities.content"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label",
      "info": "t:sections.header.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label",
      "info": "t:sections.header.settings.enable_language_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
